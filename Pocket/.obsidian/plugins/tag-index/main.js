/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var D=Object.create;var f=Object.defineProperty;var P=Object.getOwnPropertyDescriptor;var S=Object.getOwnPropertyNames;var k=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var M=g=>f(g,"__esModule",{value:!0});var V=(g,t)=>{M(g);for(var e in t)f(g,e,{get:t[e],enumerable:!0})},H=(g,t,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of S(t))!A.call(g,n)&&n!=="default"&&f(g,n,{get:()=>t[n],enumerable:!(e=P(t,n))||e.enumerable});return g},v=g=>H(M(f(g!=null?D(k(g)):{},"default",g&&g.__esModule&&"default"in g?{get:()=>g.default,enumerable:!0}:{value:g,enumerable:!0})),g);V(exports,{default:()=>E});var p=v(require("obsidian"));var b={importantTags:[],addTagsToTop:!1,debugMode:!1,autoOpenTagIndexPanel:!1};var h=v(require("obsidian")),x="tag-index-view",w=class extends h.ItemView{constructor(t,e){super(t);this.draggedTag=null;this.draggedElement=null;this.expandedTags=new Set;this.plugin=e}getViewType(){return x}getDisplayText(){return"Tag Index"}getIcon(){return"hash"}async onOpen(){let t=this.containerEl.children[1];t.empty();let n=t.createDiv({cls:"tag-index-header"}).createSpan({cls:"tag-index-info-icon"});(0,h.setIcon)(n,"info"),n.setAttribute("title","Important tags from tag index"),this.tagContainer=t.createDiv({cls:"tag-index-container"}),this.renderTags()}async onClose(){}renderTags(){if(this.tagContainer.empty(),this.plugin.settings.importantTags.length===0){this.tagContainer.createDiv({cls:"tag-index-empty-state"}).setText("No important tags added yet");return}let t=[...this.plugin.settings.importantTags].sort((e,n)=>e.position-n.position);for(let e of t)this.createTagElement(e)}createTagElement(t){let e=this.tagContainer.createDiv({cls:"tag-index-tag"});e.setAttribute("data-tag",t.name);let n=this.expandedTags.has(t.name);n&&e.addClass("tag-expanded");let a=e.createDiv({cls:"tag-index-tag-header"}),s=a.createDiv({cls:"tag-index-collapse-icon"});(0,h.setIcon)(s,n?"chevron-down":"chevron-right"),a.createDiv({cls:"tag-index-tag-name"}).createSpan().setText(t.name);let o=a.createDiv({cls:"tag-index-remove-btn"});(0,h.setIcon)(o,"x"),o.addEventListener("click",i=>{i.stopPropagation(),this.removeTag(t.name)});let l=e.createDiv({cls:"tag-index-tag-notes"});n||l.addClass("tag-index-display-none"),n&&this.populateNotesForTag(t.name,l),a.addEventListener("click",()=>{this.toggleTag(t.name,e,s,l)}),a.setAttribute("draggable","true"),a.addEventListener("dragstart",i=>{this.draggedTag=t.name,this.draggedElement=e,e.addClass("tag-being-dragged"),i.dataTransfer&&(i.dataTransfer.setData("text/plain",t.name),i.dataTransfer.effectAllowed="move")}),a.addEventListener("dragend",()=>{e.removeClass("tag-being-dragged"),this.draggedTag=null,this.draggedElement=null}),e.addEventListener("dragover",i=>{i.preventDefault(),this.draggedTag&&this.draggedTag!==t.name&&e.addClass("tag-drag-over")}),e.addEventListener("dragleave",()=>{e.removeClass("tag-drag-over")}),e.addEventListener("drop",i=>{i.preventDefault(),e.removeClass("tag-drag-over"),this.draggedTag&&this.draggedTag!==t.name&&this.moveTag(this.draggedTag,t.name)})}async removeTag(t){this.plugin.settings.importantTags=this.plugin.settings.importantTags.filter(e=>e.name!==t),await this.plugin.saveSettings(),this.renderTags()}async moveTag(t,e){let n=[...this.plugin.settings.importantTags],a=n.findIndex(c=>c.name===t),s=n.findIndex(c=>c.name===e);if(a===-1||s===-1)return;let r=n[a],o=n[s],i=a<s?o.position+.5:o.position-.5;r.position=i;let d=n.sort((c,u)=>c.position-u.position).map((c,u)=>({...c,position:u}));this.plugin.settings.importantTags=d,await this.plugin.saveSettings(),this.renderTags()}async toggleTag(t,e,n,a){this.expandedTags.has(t)?(this.expandedTags.delete(t),a.addClass("tag-index-display-none"),a.removeClass("tag-index-display-block"),e.removeClass("tag-expanded"),(0,h.setIcon)(n,"chevron-right")):(this.expandedTags.add(t),e.addClass("tag-expanded"),(0,h.setIcon)(n,"chevron-down"),a.empty(),a.createDiv({cls:"tag-index-loading"}).setText("Loading notes..."),a.removeClass("tag-index-display-none"),a.addClass("tag-index-display-block"),await this.populateNotesForTag(t,a))}async populateNotesForTag(t,e){e.empty();let n=t.startsWith("#")?t.substring(1):t,a=this.app.vault.getMarkdownFiles().filter(r=>{let o=this.app.metadataCache.getFileCache(r);if(!o)return!1;if(o.tags&&o.tags.some(i=>i.tag===`#${n}`))return!0;if(o.frontmatter&&o.frontmatter.tags){let l=o.frontmatter.tags;if(Array.isArray(l))return l.some(i=>i===n);if(typeof l=="string")return l.split(",").map(i=>i.trim()).includes(n)}return!1});if(a.length===0){e.createDiv({cls:"tag-index-empty-note"}).setText("No notes found with this tag");return}let s=e.createDiv({cls:"tag-index-notes-list"});for(let r of a){let o=s.createDiv({cls:"tag-index-note-item"}),l=o.createEl("a",{text:r.basename,cls:"tag-index-note-link"}),i=o.createDiv({cls:"tag-index-note-preview tag-index-display-none"});l.addEventListener("click",d=>{d.preventDefault(),this.app.workspace.getLeaf().openFile(r)}),o.addEventListener("mouseenter",async()=>{i.setText("Loading preview..."),i.removeClass("tag-index-display-none"),i.addClass("tag-index-display-block");try{let d=await this.app.vault.read(r),c=d.slice(0,500)+(d.length>500?"...":"");i.empty(),await h.MarkdownRenderer.renderMarkdown(c,i,r.path,this.plugin)}catch(d){i.setText("Error loading preview")}}),o.addEventListener("mouseleave",()=>{i.addClass("tag-index-display-none"),i.removeClass("tag-index-display-block")})}}async addTag(t){let e=t;if(e.startsWith("#")&&(e=e.substring(1)),e=e.trim(),e.includes(`
`))e=e.split(`
`)[0].trim();else if(e.match(/^(.*?)\s+\d+$/)){let a=e.match(/^(.*?)\s+\d+$/);a&&(e=a[1].trim())}else e.match(/^(.+?)(\d+)$/);if(this.plugin.settings.importantTags.some(a=>a.name===e))return!1;let n=[...this.plugin.settings.importantTags];if(this.plugin.settings.addTagsToTop){for(let s=0;s<n.length;s++)n[s].position+=1;let a={name:e,position:0};n.unshift(a)}else{let a=n.length,s={name:e,position:a};n.push(s)}return this.plugin.settings.importantTags=n,await this.plugin.saveSettings(),this.renderTags(),!0}async showNotesWithTag(t){let e=this.tagContainer.querySelector(`[data-tag="${t}"]`);if(e){let n=e.querySelector(".tag-index-collapse-icon"),a=e.querySelector(".tag-index-tag-notes");n&&a&&(this.expandedTags.has(t)||this.toggleTag(t,e,n,a))}}onMenu(t){}onResize(){}onLayoutResize(){}};var m=v(require("obsidian")),I=class extends m.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new m.Setting(t).setName("Add new tags to top").setDesc("When enabled, new tags will be added to the top of the tag list; otherwise, they will be added to the bottom.").addToggle(e=>e.setValue(this.plugin.settings.addTagsToTop).onChange(async n=>{this.plugin.settings.addTagsToTop=n,await this.plugin.saveSettings(),this.plugin.tagIndexView&&this.plugin.tagIndexView.renderTags()})),new m.Setting(t).setName("Auto-open tag index panel").setDesc("When enabled, the tag index side panel will automatically open when Obsidian starts or when the plugin is enabled.").addToggle(e=>e.setValue(this.plugin.settings.autoOpenTagIndexPanel).onChange(async n=>{this.plugin.settings.autoOpenTagIndexPanel=n,await this.plugin.saveSettings()})),new m.Setting(t).setName("Advanced").setHeading(),new m.Setting(t).setName("Debug mode").setDesc("Enable console logging for debugging purposes. Only enable this if you need to troubleshoot issues.").addToggle(e=>e.setValue(this.plugin.settings.debugMode).onChange(async n=>{this.plugin.settings.debugMode=n,await this.plugin.saveSettings()}))}};var E=class extends p.Plugin{constructor(){super(...arguments);this.tagIndexView=null}async onload(){await this.loadSettings(),this.registerView(x,t=>(this.tagIndexView=new w(t,this),this.tagIndexView)),this.addRibbonIcon("hash","Open tag index",()=>{this.activateView()}),this.addCommand({id:"open-tag-index-view",name:"Open tag index",callback:()=>{this.activateView()}}),this.addCommand({id:"add-tag-to-index",name:"Add to tag index",callback:()=>{new C(this).open()}}),this.addSettingTab(new I(this.app,this)),this.registerEvent(this.app.workspace.on("editor-menu",(t,e,n)=>{if(!n.file)return;let a=e.getCursor(),s=this.app.metadataCache.getFileCache(n.file);if(!s||!s.tags)return;let r=this.findTagAtPosition(s.tags,a);r&&t.addItem(o=>{o.setTitle("Add to tag index").setIcon("plus").onClick(()=>{this.addTagToIndex(r)})})})),this.setupTagPaneContextMenu(),this.app.workspace.onLayoutReady(()=>{this.settings.autoOpenTagIndexPanel&&this.activateView()})}onunload(){console.log("Unloading Tag Index plugin"),document.removeEventListener("contextmenu",this.contextMenuHandler,!0)}findTagAtPosition(t,e){for(let n of t)if(n.position.start.line===e.line&&n.position.end.line===e.line&&n.position.start.col<=e.ch&&n.position.end.col>=e.ch)return n.tag;return null}setupTagPaneContextMenu(){let t=(e,n)=>{var l,i;let s=n.getAttribute("data-tag");if(!s){let d=n.closest("[data-tag]");if(d&&(s=d.getAttribute("data-tag")),!s){let c=(l=n.innerText)==null?void 0:l.trim();if(c&&c.includes(`
`))s=c.split(`
`)[0].trim();else{let u=(i=n.textContent)==null?void 0:i.trim();if(!u)return;let L=this.getAllTags().map(T=>T.startsWith("#")?T.substring(1):T),y=u.slice(0,-1);if(L.includes(y))s=y;else if(u.match(/^(.*?)\s+\d+$/)){let T=u.match(/^(.*?)\s+\d+$/);T&&(s=T[1].trim())}else s=u}}}if(!s)return;let r,o=p.Menu;if(o.forEvent){let d=e.obsidian_contextmenu;d?r=d:(r=o.forEvent(e),e.obsidian_contextmenu=r)}else{let d=e.obsidian_contextmenu;d?r=d:(r=new p.Menu,e.obsidian_contextmenu=r,setTimeout(()=>{r.showAtPosition({x:e.pageX,y:e.pageY})},0))}r.addItem(d=>{d.setTitle("Add to tag index").setIcon("plus").onClick(()=>{let c=s.startsWith("#")?s:`#${s}`;this.addTagToIndex(c)})})};this.contextMenuHandler=e=>{let n=e.target;n&&n.closest&&n.closest(".tag-pane-tag")&&t(e,n.closest(".tag-pane-tag"))},document.addEventListener("contextmenu",this.contextMenuHandler,!0),this.register(()=>{document.removeEventListener("contextmenu",this.contextMenuHandler,!0)})}async loadSettings(){this.settings=Object.assign({},b,await this.loadData()),this.settings.debugMode&&console.log("Loaded settings:",JSON.stringify(this.settings))}async saveSettings(){this.settings.debugMode&&console.log("Saving settings:",JSON.stringify(this.settings)),await this.saveData(this.settings)}async activateView(){let t=this.app.workspace.getLeavesOfType(x);if(t.length>0){this.app.workspace.revealLeaf(t[0]);return}let e=this.app.workspace.getRightLeaf(!1);e&&(await e.setViewState({type:x,active:!0}),this.app.workspace.revealLeaf(e))}async addTagToIndex(t){if(!this.tagIndexView&&(await this.activateView(),!this.tagIndexView)){console.warn("Tag Index view is not active"),new p.Notice("Tag Index view is not active. Please open the Tag Index pane first.");return}if(await this.tagIndexView.addTag(t)){let n=t.startsWith("#")?t:`#${t}`;new p.Notice(`${n} added to tag index.`)}else{let n=t;n.startsWith("#")||(n=`#${n}`),n=n.trim(),new p.Notice(`${n} already exists in tag index.`)}}getAllTags(){let t=new Set;return this.app.vault.getMarkdownFiles().forEach(e=>{let n=this.app.metadataCache.getFileCache(e);n&&n.tags&&n.tags.forEach(a=>{t.add(a.tag)})}),Array.from(t).sort()}},C=class extends p.FuzzySuggestModal{constructor(t){super(t.app);this.plugin=t,this.setPlaceholder("Type to search tags")}getItems(){return this.plugin.getAllTags().map(e=>e.startsWith("#")?e.substring(1):e)}getItemText(t){return t}onChooseItem(t,e){this.plugin.addTagToIndex(`#${t}`)}renderSuggestion(t,e){let n=e.createDiv({cls:"suggestion-item"}),a=n.createDiv({cls:"suggestion-icon"});(0,p.setIcon)(a,"hash"),n.createDiv({cls:"suggestion-content",text:t.item})}};0&&(module.exports={});

/* nosourcemap */